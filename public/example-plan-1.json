{
    "id": "PR-4ccd9676",
    "name": "Simple Todo App",
    "description": "A basic todo application with web interface",
    "stories": {
        "ST-ba482f06": {
            "id": "ST-ba482f06",
            "objective": "Project Setup",
            "acceptance_criteria": [
                "Project is initialized with necessary files and directories",
                "FastAPI is set up",
                "A 'Hello World' endpoint is created and working"
            ],
            "dependencies": [],
            "dependents": [
                "ST-edb56b54"
            ],
            "enhanced_dependencies": [],
            "work_type": "base_work",
            "priority": "high",
            "complexity_score": 2.0,
            "risk_level": "low",
            "story_context": {
                "design_system_components": [],
                "tech_constraints": {},
                "code_examples": [
                    "Factory",
                    "Observer",
                    "Component"
                ],
                "file_structure": {
                    "files": [
                        "main.py"
                    ]
                },
                "api_contracts": [],
                "database_changes": [],
                "testing_strategy": {},
                "performance_requirements": [],
                "accessibility_requirements": []
            },
            "implementation_notes": [
                "Use FastAPI for the backend",
                "Create a basic 'Hello World' endpoint to test the setup"
            ],
            "blocking_issues": [],
            "owner": null,
            "status": "ready",
            "created_at": "2025-07-10T21:48:37.785186",
            "updated_at": "2025-07-10T21:48:37.785348",
            "milestone": "Project Setup",
            "estimated_tokens": 100,
            "actual_tokens": null,
            "estimated_hours": null,
            "actual_hours": null,
            "metadata": {}
        },
        "ST-edb56b54": {
            "id": "ST-edb56b54",
            "objective": "Task Model Creation",
            "acceptance_criteria": [
                "Task model is created with necessary fields",
                "Tasks can be created, read, updated, and deleted in memory"
            ],
            "dependencies": [
                "ST-ba482f06"
            ],
            "dependents": [
                "ST-112ef4d8"
            ],
            "enhanced_dependencies": [
                {
                    "from_story_id": "ST-edb56b54",
                    "to_story_id": "ST-ba482f06",
                    "dependency_type": "technical",
                    "criticality": "high",
                    "description": "The project setup must be completed before the Task model can be created",
                    "estimated_delay_hours": null,
                    "created_at": "2025-07-10T21:48:37.785310"
                }
            ],
            "work_type": "base_work",
            "priority": "high",
            "complexity_score": 2.5,
            "risk_level": "low",
            "story_context": {
                "design_system_components": [],
                "tech_constraints": {},
                "code_examples": [
                    "Factory",
                    "Observer",
                    "Component"
                ],
                "file_structure": {
                    "files": [
                        "main.py"
                    ]
                },
                "api_contracts": [],
                "database_changes": [],
                "testing_strategy": {},
                "performance_requirements": [],
                "accessibility_requirements": []
            },
            "implementation_notes": [
                "Use Python's dataclasses for the Task model",
                "Store tasks in a list in memory"
            ],
            "blocking_issues": [],
            "owner": null,
            "status": "blocked",
            "created_at": "2025-07-10T21:48:37.785240",
            "updated_at": "2025-07-10T21:48:37.785358",
            "milestone": "Core Features Implementation",
            "estimated_tokens": 150,
            "actual_tokens": null,
            "estimated_hours": null,
            "actual_hours": null,
            "metadata": {}
        },
        "ST-112ef4d8": {
            "id": "ST-112ef4d8",
            "objective": "Task API Endpoints",
            "acceptance_criteria": [
                "API endpoints for creating, reading, updating, and deleting tasks are working"
            ],
            "dependencies": [
                "ST-edb56b54"
            ],
            "dependents": [
                "ST-1e6add78"
            ],
            "enhanced_dependencies": [
                {
                    "from_story_id": "ST-112ef4d8",
                    "to_story_id": "ST-edb56b54",
                    "dependency_type": "technical",
                    "criticality": "high",
                    "description": "The Task model must be created before the API endpoints can be created",
                    "estimated_delay_hours": null,
                    "created_at": "2025-07-10T21:48:37.785320"
                }
            ],
            "work_type": "base_work",
            "priority": "high",
            "complexity_score": 3.0,
            "risk_level": "low",
            "story_context": {
                "design_system_components": [],
                "tech_constraints": {},
                "code_examples": [
                    "Factory",
                    "Observer",
                    "Component"
                ],
                "file_structure": {
                    "files": [
                        "main.py"
                    ]
                },
                "api_contracts": [],
                "database_changes": [],
                "testing_strategy": {},
                "performance_requirements": [],
                "accessibility_requirements": []
            },
            "implementation_notes": [
                "Use FastAPI's routing to create the endpoints",
                "Use the Task model for request and response bodies"
            ],
            "blocking_issues": [],
            "owner": null,
            "status": "blocked",
            "created_at": "2025-07-10T21:48:37.785253",
            "updated_at": "2025-07-10T21:48:37.785359",
            "milestone": "API Development",
            "estimated_tokens": 200,
            "actual_tokens": null,
            "estimated_hours": null,
            "actual_hours": null,
            "metadata": {}
        },
        "ST-1e6add78": {
            "id": "ST-1e6add78",
            "objective": "User Interface Design",
            "acceptance_criteria": [
                "User interface is designed and implemented",
                "Interface includes a task list view, an add task form, and complete/delete buttons for each task",
                "Interface is responsive and mobile-friendly"
            ],
            "dependencies": [
                "ST-112ef4d8"
            ],
            "dependents": [
                "ST-8141c418"
            ],
            "enhanced_dependencies": [
                {
                    "from_story_id": "ST-1e6add78",
                    "to_story_id": "ST-112ef4d8",
                    "dependency_type": "feature",
                    "criticality": "medium",
                    "description": "The API endpoints must be created before the user interface can be designed",
                    "estimated_delay_hours": null,
                    "created_at": "2025-07-10T21:48:37.785325"
                }
            ],
            "work_type": "base_work",
            "priority": "high",
            "complexity_score": 3.5,
            "risk_level": "low",
            "story_context": {
                "design_system_components": [],
                "tech_constraints": {},
                "code_examples": [
                    "Factory",
                    "Observer",
                    "Component"
                ],
                "file_structure": {
                    "files": [
                        "index.html",
                        "styles.css",
                        "app.js"
                    ]
                },
                "api_contracts": [],
                "database_changes": [],
                "testing_strategy": {},
                "performance_requirements": [],
                "accessibility_requirements": []
            },
            "implementation_notes": [
                "Use HTML, CSS, and JavaScript for the user interface",
                "Make sure the design is clean and responsive"
            ],
            "blocking_issues": [],
            "owner": null,
            "status": "blocked",
            "created_at": "2025-07-10T21:48:37.785270",
            "updated_at": "2025-07-10T21:48:37.785360",
            "milestone": "User Interface Design",
            "estimated_tokens": 250,
            "actual_tokens": null,
            "estimated_hours": null,
            "actual_hours": null,
            "metadata": {}
        },
        "ST-8141c418": {
            "id": "ST-8141c418",
            "objective": "Integration of Frontend and Backend",
            "acceptance_criteria": [
                "Frontend interacts with backend through API endpoints",
                "Tasks can be created, read, updated, and deleted through the user interface"
            ],
            "dependencies": [
                "ST-1e6add78"
            ],
            "dependents": [
                "ST-8867732b"
            ],
            "enhanced_dependencies": [
                {
                    "from_story_id": "ST-8141c418",
                    "to_story_id": "ST-1e6add78",
                    "dependency_type": "integration",
                    "criticality": "high",
                    "description": "The user interface must be designed before the frontend and backend can be integrated",
                    "estimated_delay_hours": null,
                    "created_at": "2025-07-10T21:48:37.785329"
                }
            ],
            "work_type": "base_work",
            "priority": "high",
            "complexity_score": 3.0,
            "risk_level": "low",
            "story_context": {
                "design_system_components": [],
                "tech_constraints": {},
                "code_examples": [
                    "Factory",
                    "Observer",
                    "Component"
                ],
                "file_structure": {
                    "files": [
                        "app.js"
                    ]
                },
                "api_contracts": [],
                "database_changes": [],
                "testing_strategy": {},
                "performance_requirements": [],
                "accessibility_requirements": []
            },
            "implementation_notes": [
                "Use JavaScript's fetch API to interact with the backend",
                "Make sure the frontend updates when tasks are created, updated, or deleted"
            ],
            "blocking_issues": [],
            "owner": null,
            "status": "blocked",
            "created_at": "2025-07-10T21:48:37.785283",
            "updated_at": "2025-07-10T21:48:37.785360",
            "milestone": "Core Features Implementation",
            "estimated_tokens": 200,
            "actual_tokens": null,
            "estimated_hours": null,
            "actual_hours": null,
            "metadata": {}
        },
        "ST-8867732b": {
            "id": "ST-8867732b",
            "objective": "Testing and Deployment",
            "acceptance_criteria": [
                "Application is thoroughly tested",
                "Application is deployed and accessible online"
            ],
            "dependencies": [
                "ST-8141c418"
            ],
            "dependents": [],
            "enhanced_dependencies": [
                {
                    "from_story_id": "ST-8867732b",
                    "to_story_id": "ST-8141c418",
                    "dependency_type": "technical",
                    "criticality": "high",
                    "description": "The frontend and backend must be integrated before the application can be tested and deployed",
                    "estimated_delay_hours": null,
                    "created_at": "2025-07-10T21:48:37.785333"
                }
            ],
            "work_type": "base_work",
            "priority": "high",
            "complexity_score": 2.0,
            "risk_level": "low",
            "story_context": {
                "design_system_components": [],
                "tech_constraints": {},
                "code_examples": [
                    "Factory",
                    "Observer",
                    "Component"
                ],
                "file_structure": {
                    "files": [
                        "main.py",
                        "test_main.py"
                    ]
                },
                "api_contracts": [],
                "database_changes": [],
                "testing_strategy": {},
                "performance_requirements": [],
                "accessibility_requirements": []
            },
            "implementation_notes": [
                "Use FastAPI's test client for backend testing",
                "Use a suitable hosting platform for deployment"
            ],
            "blocking_issues": [],
            "owner": null,
            "status": "blocked",
            "created_at": "2025-07-10T21:48:37.785293",
            "updated_at": "2025-07-10T21:48:37.785361",
            "milestone": "Testing and Deployment",
            "estimated_tokens": 100,
            "actual_tokens": null,
            "estimated_hours": null,
            "actual_hours": null,
            "metadata": {}
        }
    },
    "agents": {},
    "messages": [],
    "created_at": "2025-07-10T21:48:37.784902",
    "updated_at": "2025-07-10T21:48:37.785334",
    "status": "planning",
    "budget_limit": 1000,
    "budget_used": 0,
    "milestones": {},
    "dependency_analysis": null,
    "context_constraints": {}
}